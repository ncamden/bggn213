---
title: "Lab 10: Halloween Candy Mini Project"
author: "Nichelle Camden"
format: html
toc: true
---

# Background

In this mini-project we will examine 538 Halloween Candy data. 
```{r}
candy <- read.csv("candy-data.txt", row.names=1)
head(candy)
```
# Q1. How many different candy types are in this dataset?
```{r}
nrow(candy)
```
There are 85 different types of candy.

# Q2. How many fruity candy types are in the dataset?
```{r}
sum(candy$fruity)
```
There are 38 candy types that are fruity.

# Q3. What is your favorite candy in the dataset and what is its winpercent value?
```{r}
#rownames(candy)
candy["Peanut butter M&MÕs",]$winpercent

```
My favorite candy in the data set is peanut butter M&Ms. Their win percent is 71.4605%

# Q4. What is the winpercent value for “Kit Kat”?
```{r}
candy["Kit Kat",]$winpercent
```
The winpercent for Kit Kat is 76.7686%

# Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?
```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```
The winpercent for Tootsie Rolls is 49.6535%.

```{r}
#skim(candy)
```
# Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?
Chocolate


# Q7. What do you think a zero and one represent for the candy$chocolate column?
0 means no or missing/ that value doesn't apply here, and 1 means yes or that it does apply.

# Q8. Plot a histogram of winpercent values
```{r}
hist(candy$winpercent)
```

# Q9. Is the distribution of winpercent values symmetrical?
It is pretty close but the values are a little higher in the first half.

# Q10. Is the center of the distribution above or below 50%?
below

# Q11. On average is chocolate candy higher or lower ranked than fruit candy?
```{r}
mean(candy$winpercent[as.logical(candy$chocolate)])
mean(candy$winpercent[as.logical(candy$fruity)])

```
higher

# Q12. Is this difference statistically significant?
We can then use this logical vector to access the coresponding candy rows (those with TRUE values). For example to get the winpercent values for all nougat contaning candy we can use the code: candy$winpercent[as.logical(candy$nougat)]. In addation the functions mean() and t.test() should help you answer the last two questions here.
```{r}
t.test(candy$winpercent[as.logical(candy$chocolate)],candy$winpercent[as.logical(candy$fruity)])
```
The p-value is very small so the difference is statistically significant.


## 3. Overall candy rankings

# Q13. What are the five least liked candy types in this set?

```{r}
inds <- order(candy$winpercent)
head(candy[inds,], n=5)
```

# Q14. What are the top 5 all time favorite candy types out of this set?
```{r}
inds <- order(candy$winpercent)
tail(candy[inds,], n=5)
```
# Q15. Make a first barplot of candy ranking based on winpercent values.
```{r}
library("ggplot2")

ggplot(candy) +
  aes(winpercent, rownames(candy)) +
        geom_col()

```

# Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?
```{r}
p <- ggplot(candy) +
  aes(winpercent, reorder (rownames(candy),winpercent)) +
        geom_col()
p
```

```{r}
ggsave("mybarplot.png")
```

```{r}
my_cols <- rep("black", nrow(candy))
#my_cols
my_cols[as.logical(candy$chocolate)] <- "chocolate"
my_cols[as.logical(candy$bar)] <- "brown"
my_cols[as.logical(candy$fruity)] <- "pink"
my_cols
```
Now I can use this vecotor to color my barplot
```{r}
ggplot(candy) +
  aes(winpercent, reorder (rownames(candy),winpercent)) +
        geom_col(fill=my_cols)
```
# Q17. What is the worst ranked chocolate candy?
Sixlets is worst ranked

# Q18. What is the best ranked fruity candy?
Starburst

## 4. Taking a look at pricepoint.

What is the best candy for the least amount fo money?
One way to get this would be to make a plot of `winpercent` vs `pricepercent` variable.
```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label = rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text(col=my_cols)
```

This plot sucks. It's too hard to read the labels. We can use `ggrepel` package to help with this.

```{r}
library("ggrepel")

ggplot(candy) +
  aes(winpercent, pricepercent, label = rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text_repel(col=my_cols, max.overlaps =8)
```


# Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?
Reeses Miniatures

# Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?
Nik L Nip, Smarties, ring pop, Mr.Good Bar, Hershey's special dark
```{r}
order(candy$pricepercent)

ggplot(candy) +
  aes(pricepercent, reorder (rownames(candy),pricepercent)) +
        geom_col(fill=my_cols)

```



## 5. Exploring the correlation structure

```{r}
library(corrplot)
cij <- cor(candy)
corrplot(cij)
```
#Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?
fruity and chocolate

# Q23. Similarly, what two variables are most positively correlated?
chocolate and bar or chocolate and winpercent

## PCA: Principal Component Analysis

The main function that's always there for us is `prcomp`. It has an important argument that is set to `scale=FALSE`.
```{r}
pca <- prcomp(candy, scale =TRUE)
summary(pca)
```

My PCA plot (aka PC1 vs PC2) score plot
```{r}
plot(pca$x[,1], pca$x[,2], col=my_cols, pch= 16)
```
I will make a nicer plot with ggplot.
ggplot only works with data.frames as input so I need to make one for it first..

```{r}
# Make a new data-frame with our PCA results and candy data
#the three new columns are for PC 1-3
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
ggplot(my_data) +
  aes(PC1, PC2, labels = rownames(my_data)) +
  geom_point(col= my_cols) +
  geom_text_repel(label= rownames(my_data), col=my_cols, max.overlaps = 7)
```

